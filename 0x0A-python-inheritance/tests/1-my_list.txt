==================
1-my_list subclass
==================
Importing the function:
        >>> MyList = __import__("1-my_list").MyList

Checking for module:
         >>> m = __import__("1-my_list").__doc__
         >>> len(m) > 1
         True

Checking for class:
         >>> c = __import__("1-my_list").MyList.__doc__
         >>> len(c) > 1
         True

Checking for method docstring:
	 >>> mod = __import__("1-my_list").MyList.print_sorted.__doc__
	 >>> len(mod) > 1
	 True

Checking that MyList inherits from list:
	 >>> issubclass(MyList, list)
	 True

Checking for empty list:
	 >>> l = MyList()
	 >>> l.print_sorted()
	 []

Checking that appendng works:
	 >>> l.append(4)
	 >>> l.append(3)
	 >>> l.append(2)
	 >>> l.append(1)
	 >>> print(l)
	 [4, 3, 2, 1]

Checking for list already in correct order:
	 >>> l.print_sorted()
	 [4, 3, 2, 1]

Checking for reversed order list:
	 >>> l = MyList()
	 >>> l.append(1)
	 >>> l.append(2)
	 >>> l.append(3)
	 >>> l.append(4)
	 >>> print(l)
	 [1, 2, 3, 4]
	 >>> l.print_sorted()
	 [4, 3, 2, 1]
	 >>> print(l)
	 [1, 2, 3, 4]

Checking for one negative number:
	 >>> l.append(-3)
	 >>> l.append(6)
	 >>> print(l)
	 [4, 3, 2, 1, -3, 6]
	 >>> l.print_sorted()
	 [-3, 1, 2, 3, 4, 6]
	 >>> print(l)
	 [4, 3, 2, 1, -3, 6]

Checking for all negative numbers:
	 >>> l = MyList()
	 >>> l.append(-5)
	 >>> l.append(-3)
	 >>> l.append(-4)
	 >>> l.append(-2)
	 >>> l.append(-6)
	 >>> print(l)
	 [-5, -3, -4, -2, -6]
	 >>> l.print_sorted()
	 [-5, -6, -4, -2, -3]
	 >>> print(l)
         [-5, -3, -4, -2, -6]

Checking for too many arguments:
	 >>> l.print_sorted(1)
	 Traceback (most recent call last):
	 ...
	 TypeError: print_sorted() takes 1 positional argument but 2 were given